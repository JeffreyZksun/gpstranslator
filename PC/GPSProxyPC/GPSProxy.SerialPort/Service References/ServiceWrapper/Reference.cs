//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPSProxy.SerialPort.ServiceWrapper {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathInfo", Namespace="http://schemas.datacontract.org/2004/07/GPSProxy.GPSService")]
    [System.SerializableAttribute()]
    public partial class PathInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/GPSProxy.GPSService")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSUploadData", Namespace="http://schemas.datacontract.org/2004/07/GPSProxy.GPSService")]
    [System.SerializableAttribute()]
    public partial class GPSUploadData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NMEASentenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PathIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NMEASentence {
            get {
                return this.NMEASentenceField;
            }
            set {
                if ((object.ReferenceEquals(this.NMEASentenceField, value) != true)) {
                    this.NMEASentenceField = value;
                    this.RaisePropertyChanged("NMEASentence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PathID {
            get {
                return this.PathIDField;
            }
            set {
                if ((this.PathIDField.Equals(value) != true)) {
                    this.PathIDField = value;
                    this.RaisePropertyChanged("PathID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PathPassword {
            get {
                return this.PathPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PathPasswordField, value) != true)) {
                    this.PathPasswordField = value;
                    this.RaisePropertyChanged("PathPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSDataRequestParameter", Namespace="http://schemas.datacontract.org/2004/07/GPSProxy.GPSService")]
    [System.SerializableAttribute()]
    public partial class GPSDataRequestParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LatestDataOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PathIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastDataID {
            get {
                return this.LastDataIDField;
            }
            set {
                if ((this.LastDataIDField.Equals(value) != true)) {
                    this.LastDataIDField = value;
                    this.RaisePropertyChanged("LastDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LatestDataOnly {
            get {
                return this.LatestDataOnlyField;
            }
            set {
                if ((this.LatestDataOnlyField.Equals(value) != true)) {
                    this.LatestDataOnlyField = value;
                    this.RaisePropertyChanged("LatestDataOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLines {
            get {
                return this.MaxLinesField;
            }
            set {
                if ((this.MaxLinesField.Equals(value) != true)) {
                    this.MaxLinesField = value;
                    this.RaisePropertyChanged("MaxLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PathID {
            get {
                return this.PathIDField;
            }
            set {
                if ((this.PathIDField.Equals(value) != true)) {
                    this.PathIDField = value;
                    this.RaisePropertyChanged("PathID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PathPassword {
            get {
                return this.PathPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PathPasswordField, value) != true)) {
                    this.PathPasswordField = value;
                    this.RaisePropertyChanged("PathPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSDownloadData", Namespace="http://schemas.datacontract.org/2004/07/GPSProxy.GPSService")]
    [System.SerializableAttribute()]
    public partial class GPSDownloadData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NMEASentenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NMEASentence {
            get {
                return this.NMEASentenceField;
            }
            set {
                if ((object.ReferenceEquals(this.NMEASentenceField, value) != true)) {
                    this.NMEASentenceField = value;
                    this.RaisePropertyChanged("NMEASentence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceWrapper.IGPSManager")]
    public interface IGPSManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPSManager/CreateNewPath", ReplyAction="http://tempuri.org/IGPSManager/CreateNewPathResponse")]
        bool CreateNewPath(GPSProxy.SerialPort.ServiceWrapper.PathInfo path, GPSProxy.SerialPort.ServiceWrapper.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPSManager/GetPathList", ReplyAction="http://tempuri.org/IGPSManager/GetPathListResponse")]
        GPSProxy.SerialPort.ServiceWrapper.PathInfo[] GetPathList(string searchString, GPSProxy.SerialPort.ServiceWrapper.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPSManager/UploadGPSData", ReplyAction="http://tempuri.org/IGPSManager/UploadGPSDataResponse")]
        bool UploadGPSData(GPSProxy.SerialPort.ServiceWrapper.GPSUploadData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPSManager/GetGPSData", ReplyAction="http://tempuri.org/IGPSManager/GetGPSDataResponse")]
        GPSProxy.SerialPort.ServiceWrapper.GPSDownloadData[] GetGPSData(GPSProxy.SerialPort.ServiceWrapper.GPSDataRequestParameter para);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPSManager/GetPathID", ReplyAction="http://tempuri.org/IGPSManager/GetPathIDResponse")]
        int GetPathID(GPSProxy.SerialPort.ServiceWrapper.PathInfo path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPSManager/IsServiceAvailable", ReplyAction="http://tempuri.org/IGPSManager/IsServiceAvailableResponse")]
        bool IsServiceAvailable(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IGPSManagerChannel : GPSProxy.SerialPort.ServiceWrapper.IGPSManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GPSManagerClient : System.ServiceModel.ClientBase<GPSProxy.SerialPort.ServiceWrapper.IGPSManager>, GPSProxy.SerialPort.ServiceWrapper.IGPSManager {
        
        public GPSManagerClient() {
        }
        
        public GPSManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GPSManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GPSManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GPSManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateNewPath(GPSProxy.SerialPort.ServiceWrapper.PathInfo path, GPSProxy.SerialPort.ServiceWrapper.UserInfo user) {
            return base.Channel.CreateNewPath(path, user);
        }
        
        public GPSProxy.SerialPort.ServiceWrapper.PathInfo[] GetPathList(string searchString, GPSProxy.SerialPort.ServiceWrapper.UserInfo user) {
            return base.Channel.GetPathList(searchString, user);
        }
        
        public bool UploadGPSData(GPSProxy.SerialPort.ServiceWrapper.GPSUploadData data) {
            return base.Channel.UploadGPSData(data);
        }
        
        public GPSProxy.SerialPort.ServiceWrapper.GPSDownloadData[] GetGPSData(GPSProxy.SerialPort.ServiceWrapper.GPSDataRequestParameter para) {
            return base.Channel.GetGPSData(para);
        }
        
        public int GetPathID(GPSProxy.SerialPort.ServiceWrapper.PathInfo path) {
            return base.Channel.GetPathID(path);
        }
        
        public bool IsServiceAvailable(string msg) {
            return base.Channel.IsServiceAvailable(msg);
        }
    }
}
